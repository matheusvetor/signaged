#!/bin/bash

### BEGIN INIT INFO
# Provides: signaged
# Required-Start: $remote_fs $syslog
# Required-Stop: $remote_fs $syslog
# Default-Start: 2 3 4 5
# Default-Stop: 0 1 6
# Short-Description: Start signaged at boot time
# Description: Start signaged at boot time
### END INIT INFO

PATH=/usr/local/rvm/rubies/ruby-2.1.3/bin:$PATH


signaged_home="/home/pi/signaged"
#signaged_server="http://192.168.25.11:3000"
signaged_server="http://admin.tvopen.com.br"
# machine_serial="CD9AK29HYCGPAH09"
machine_serial=$(grep -i serial /proc/cpuinfo | cut -d : -f2)

pid_file="/var/run/signage.pid"

function running() {
    if [ -f "$pid_file" ]
    then
        return 0
    else
        return 1
    fi
}

function start_html2img() {
    echo "Starting html2img server..."
    /usr/bin/node "$signaged_home/bin/html2img-server.js" "$signaged_home/downloads" &
}

function stop_html2img() {
    echo "Stopping html2img server..."
    killall node
}

function start() {
    if running
    then
        echo "signaged is already running"
    else
        start_html2img
        sleep 15
        echo "Starting signaged ..."
        fbi -T 2 -reset
        $signaged_home/bin/signaged.rb $signaged_server $machine_serial & echo $! > "$pid_file"
    fi
}

function stop() {
    if running
    then
        echo "Stopping signaged ..."
        pid=$(cat "$pid_file")
        kill "$pid"
        rm "$pid_file"
    else
        echo "signaged is not running"
    fi
    killall fbi ruby node omxplayer
}

case "$1" in
    start)
        start
        ;;
    stop)
        stop
        ;;
    restart)
        stop
        start
        ;;
    status)
        if running
        then
            echo "signaged is started"
        else
            echo "signaged is stopped"
        fi
        ;;
    *)
        echo "Usage: $0 (start|stop|restart|status)"
        ;;
esac
